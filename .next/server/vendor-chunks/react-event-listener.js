"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-event-listener";
exports.ids = ["vendor-chunks/react-event-listener"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-event-listener/dist/react-event-listener.cjs.js":
/*!****************************************************************************!*\
  !*** ./node_modules/react-event-listener/dist/react-event-listener.cjs.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nfunction _interopDefault(ex) {\n    return ex && typeof ex === \"object\" && \"default\" in ex ? ex[\"default\"] : ex;\n}\nvar _classCallCheck = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \"(ssr)/./node_modules/@babel/runtime/helpers/classCallCheck.js\"));\nvar _createClass = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \"(ssr)/./node_modules/@babel/runtime/helpers/createClass.js\"));\nvar _possibleConstructorReturn = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \"(ssr)/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\"));\nvar _getPrototypeOf = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \"(ssr)/./node_modules/@babel/runtime/helpers/getPrototypeOf.js\"));\nvar _inherits = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \"(ssr)/./node_modules/@babel/runtime/helpers/inherits.js\"));\nvar _typeof = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/./node_modules/@babel/runtime/helpers/typeof.js\"));\nvar _objectWithoutProperties = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/objectWithoutProperties */ \"(ssr)/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js\"));\nvar _extends = _interopDefault(__webpack_require__(/*! @babel/runtime/helpers/extends */ \"(ssr)/./node_modules/@babel/runtime/helpers/extends.js\"));\nvar React = _interopDefault(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nvar PropTypes = _interopDefault(__webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\"));\nvar warning = _interopDefault(__webpack_require__(/*! warning */ \"(ssr)/./node_modules/warning/warning.js\"));\nfunction defineProperty(object, property, attr) {\n    return Object.defineProperty(object, property, attr);\n} // Passive options\n// Inspired by https://github.com/Modernizr/Modernizr/blob/master/feature-detects/dom/passiveeventlisteners.js\nvar passiveOption = function() {\n    var cache = null;\n    return function() {\n        if (cache !== null) {\n            return cache;\n        }\n        var supportsPassiveOption = false;\n        try {\n            window.addEventListener(\"test\", null, defineProperty({}, \"passive\", {\n                get: function get() {\n                    supportsPassiveOption = true;\n                }\n            }));\n        } catch (err) {}\n        cache = supportsPassiveOption;\n        return supportsPassiveOption;\n    }();\n}();\nvar defaultEventOptions = {\n    capture: false,\n    passive: false\n};\nfunction mergeDefaultEventOptions(options) {\n    return _extends({}, defaultEventOptions, options);\n}\nfunction getEventListenerArgs(eventName, callback, options) {\n    var args = [\n        eventName,\n        callback\n    ];\n    args.push(passiveOption ? options : options.capture);\n    return args;\n}\nfunction on(target, eventName, callback, options) {\n    // eslint-disable-next-line prefer-spread\n    target.addEventListener.apply(target, getEventListenerArgs(eventName, callback, options));\n}\nfunction off(target, eventName, callback, options) {\n    // eslint-disable-next-line prefer-spread\n    target.removeEventListener.apply(target, getEventListenerArgs(eventName, callback, options));\n}\nfunction forEachListener(props, iteratee) {\n    var children = props.children, target = props.target, eventProps = _objectWithoutProperties(props, [\n        \"children\",\n        \"target\"\n    ]);\n    Object.keys(eventProps).forEach(function(name) {\n        if (name.substring(0, 2) !== \"on\") {\n            return;\n        }\n        var prop = eventProps[name];\n        var type = _typeof(prop);\n        var isObject = type === \"object\";\n        var isFunction = type === \"function\";\n        if (!isObject && !isFunction) {\n            return;\n        }\n        var capture = name.substr(-7).toLowerCase() === \"capture\";\n        var eventName = name.substring(2).toLowerCase();\n        eventName = capture ? eventName.substring(0, eventName.length - 7) : eventName;\n        if (isObject) {\n            iteratee(eventName, prop.handler, prop.options);\n        } else {\n            iteratee(eventName, prop, mergeDefaultEventOptions({\n                capture: capture\n            }));\n        }\n    });\n}\nfunction withOptions(handler, options) {\n     true ? warning(options, \"react-event-listener: should be specified options in withOptions.\") : 0;\n    return {\n        handler: handler,\n        options: mergeDefaultEventOptions(options)\n    };\n}\nvar EventListener = /*#__PURE__*/ function(_React$PureComponent) {\n    _inherits(EventListener, _React$PureComponent);\n    function EventListener() {\n        _classCallCheck(this, EventListener);\n        return _possibleConstructorReturn(this, _getPrototypeOf(EventListener).apply(this, arguments));\n    }\n    _createClass(EventListener, [\n        {\n            key: \"componentDidMount\",\n            value: function componentDidMount() {\n                this.applyListeners(on);\n            }\n        },\n        {\n            key: \"componentDidUpdate\",\n            value: function componentDidUpdate(prevProps) {\n                this.applyListeners(off, prevProps);\n                this.applyListeners(on);\n            }\n        },\n        {\n            key: \"componentWillUnmount\",\n            value: function componentWillUnmount() {\n                this.applyListeners(off);\n            }\n        },\n        {\n            key: \"applyListeners\",\n            value: function applyListeners(onOrOff) {\n                var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.props;\n                var target = props.target;\n                if (target) {\n                    var element = target;\n                    if (typeof target === \"string\") {\n                        element = window[target];\n                    }\n                    forEachListener(props, onOrOff.bind(null, element));\n                }\n            }\n        },\n        {\n            key: \"render\",\n            value: function render() {\n                return this.props.children || null;\n            }\n        }\n    ]);\n    return EventListener;\n}(React.PureComponent);\nEventListener.propTypes =  true ? {\n    /**\n   * You can provide a single child too.\n   */ children: PropTypes.node,\n    /**\n   * The DOM target to listen to.\n   */ target: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string\n    ]).isRequired\n} : 0;\nexports.withOptions = withOptions;\nexports[\"default\"] = EventListener;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-event-listener/dist/react-event-listener.cjs.js\n");

/***/ })

};
;